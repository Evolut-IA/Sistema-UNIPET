Query: select "id", "whatsapp", "email", "phone", "instagram_url", "facebook_url", "linkedin_url", "youtube_url", "cnpj", "business_hours", "our_story", "created_at", "updated_at", "privacy_policy", "terms_of_use", "address", "main_image", "network_image", "about_image", "main_image_url", "network_image_url", "about_image_url", "cores" from "site_settings" limit $1 -- params: [1]
Query: select "id", "name", "price", "description", "features", "image", "button_text", "plan_type", "is_active", "display_order", "created_at", "billing_frequency", "base_price", "installment_price", "installment_count", "per_pet_billing", "pet_discounts", "payment_description", "available_payment_methods", "available_billing_options", "annual_price", "annual_installment_price", "annual_installment_count" from "plans" where "plans"."is_active" = $1 order by "plans"."display_order" asc -- params: [true]
Query: select "id", "question", "answer", "display_order", "is_active", "created_at" from "faq_items" where "faq_items"."is_active" = $1 order by "faq_items"."display_order" asc -- params: [true]
Query: select "id", "welcome_message", "placeholder_text", "chat_title", "button_icon", "bot_icon", "user_icon", "bot_icon_url", "user_icon_url", "chat_position", "chat_size", "is_enabled", "created_at", "updated_at" from "chat_settings" limit $1 -- params: [1]
GET /api/site-settings 304 in 375ms :: {"id":"19c61b78-d8a3-4b26-a289-7b71e8785‚Ä¶
GET /api/plans 304 in 931ms :: [{"id":"ec994283-76de-4605-afa3-0670a8a0a475","n‚Ä¶
GET /api/faq 304 in 903ms :: [{"id":"5cb21830-8d80-4ad0-9ef3-7117393dfb53","que‚Ä¶
‚úÖ [CHAT] Chat settings retrieved: {
  hasBotIcon: true,
  hasUserIcon: true,
  botIconUrl: <Buffer 89 50 4e 47 0d 0a 1a 0a 00 00 00 0d 49 48 44 52 00 00 00 40 00 00 00 2c 08 03 00 00 00 e2 81 4e cd 00 00 03 00 50 4c 54 45 fd fd fd f5 f4 f5 50 93 31 ... 3453 more bytes>,
  userIconUrl: <Buffer 89 50 4e 47 0d 0a 1a 0a 00 00 00 0d 49 48 44 52 00 00 00 40 00 00 00 2c 08 03 00 00 00 e2 81 4e cd 00 00 03 00 50 4c 54 45 fd fd fd f5 f4 f5 50 93 31 ... 3453 more bytes>
}
GET /api/chat/settings 304 in 1090ms :: {"id":"77d0d663-ecc3-48a8-8100-c6c6a39c‚Ä¶
Query: select "id", "name", "price", "description", "features", "image", "button_text", "plan_type", "is_active", "display_order", "created_at", "billing_frequency", "base_price", "installment_price", "installment_count", "per_pet_billing", "pet_discounts", "payment_description", "available_payment_methods", "available_billing_options", "annual_price", "annual_installment_price", "annual_installment_count" from "plans" where "plans"."is_active" = $1 order by "plans"."display_order" asc -- params: [true]
GET /api/plans 304 in 184ms :: [{"id":"ec994283-76de-4605-afa3-0670a8a0a475","n‚Ä¶
üõí [CHECKOUT-STEP2] Iniciando salvamento dos dados do cliente e pets
üîç [CHECKOUT-STEP2] Dados recebidos (sem CPF): {
  email: 'contatogabrielmarquez@gmail.com',
  hasPassword: true,
  petsCount: 1
}
Query: select "id", "full_name", "email", "phone", "cpf", "cep", "address", "number", "complement", "district", "state", "city", "password", "image", "image_url", "created_at", "updated_at" from "clients" where "clients"."email" = $1 limit $2 -- params: ["contatogabrielmarquez@gmail.com", 1]
‚ö†Ô∏è [CHECKOUT-STEP2] Cliente j√° existe, atualizando dados e adicionando pets...
üêï [CHECKOUT-STEP2] Criando pet para cliente existente: Baunilha
Query: insert into "pets" ("id", "client_id", "name", "species", "breed", "birth_date", "age", "sex", "castrated", "color", "weight", "microchip", "previous_diseases", "surgeries", "allergies", "current_medications", "hereditary_conditions", "vaccine_data", "last_checkup", "parasite_treatments", "plan_id", "image", "image_url", "is_active", "created_at", "updated_at") values (default, $1, $2, $3, $4, default, $5, $6, $7, default, $8, default, default, default, default, default, default, $9, default, default, $10, default, default, default, default, default) returning "id", "client_id", "name", "species", "breed", "birth_date", "age", "sex", "castrated", "color", "weight", "microchip", "previous_diseases", "surgeries", "allergies", "current_medications", "hereditary_conditions", "vaccine_data", "last_checkup", "parasite_treatments", "plan_id", "image", "image_url", "is_active", "created_at", "updated_at" -- params: ["client-1758805133259-52ub31z5z", "Baunilha", "C√£o", "Pug", "2", "Macho", false, "1", "[]", "ec994283-76de-4605-afa3-0670a8a0a475"]
POST /api/checkout/save-customer-data 200 in 729ms :: {"success":true,"message"‚Ä¶
üìù [CHECKOUT-STEP3] Completando registro do cliente com CPF e endere√ßo
Query: select "id", "full_name", "email", "phone", "cpf", "cep", "address", "number", "complement", "district", "state", "city", "password", "image", "image_url", "created_at", "updated_at" from "clients"
‚úÖ [CHECKOUT-STEP3] CPF j√° pertence ao mesmo cliente: client-1758805133259-52ub31z5z
üîÑ [CHECKOUT-STEP3] Atualizando cliente com dados completos: {
  clientId: 'client-1758805133259-52ub31z5z',
  cpf: '54498358848',
  hasAddress: true,
  isExistingClient: false
}
Query: update "clients" set "cpf" = $1, "cep" = $2, "address" = $3, "number" = $4, "complement" = $5, "district" = $6, "state" = $7, "city" = $8, "updated_at" = $9 where "clients"."id" = $10 returning "id", "full_name", "email", "phone", "cpf", "cep", "address", "number", "complement", "district", "state", "city", "password", "image", "image_url", "created_at", "updated_at" -- params: ["54498358848", null, "Rua Manoel Marcelino de Mattos", "21", null, "Boi√ßucanga", "SP", "S√£o Sebasti√£o", "2025-09-25T13:10:00.015Z", "client-1758805133259-52ub31z5z"]
‚úÖ [CHECKOUT-STEP3] Registro completado com sucesso
POST /api/checkout/complete-registration 200 in 367ms :: {"success":true,"messa‚Ä¶
üõí [SIMPLE-CHECKOUT] Iniciando checkout simplificado
üîç [SIMPLE] Buscando cliente: {
  cpf: '54498358848',
  email: 'contatogabrielmarquez@gmail.com',
  name: 'Gabriel Alves Marques dos Santos'
}
Query: select "id", "full_name", "email", "phone", "cpf", "cep", "address", "number", "complement", "district", "state", "city", "password", "image", "image_url", "created_at", "updated_at" from "clients"
‚úÖ [SIMPLE] Cliente encontrado por CPF: client-1758805133259-52ub31z5z
Query: insert into "pets" ("id", "client_id", "name", "species", "breed", "birth_date", "age", "sex", "castrated", "color", "weight", "microchip", "previous_diseases", "surgeries", "allergies", "current_medications", "hereditary_conditions", "vaccine_data", "last_checkup", "parasite_treatments", "plan_id", "image", "image_url", "is_active", "created_at", "updated_at") values ($1, $2, $3, $4, $5, default, $6, $7, $8, default, $9, default, default, default, default, default, default, $10, default, default, $11, default, default, $12, default, default) returning "id", "client_id", "name", "species", "breed", "birth_date", "age", "sex", "castrated", "color", "weight", "microchip", "previous_diseases", "surgeries", "allergies", "current_medications", "hereditary_conditions", "vaccine_data", "last_checkup", "parasite_treatments", "plan_id", "image", "image_url", "is_active", "created_at", "updated_at" -- params: ["pet-1758805800567-om4ttjv1", "client-1758805133259-52ub31z5z", "Baunilha", "C√£o", "Pug", "2", "Macho", false, "0", "\"[]\"", "ec994283-76de-4605-afa3-0670a8a0a475", true]
‚úÖ [SIMPLE] Pet criado: Baunilha (pet-1758805800567-om4ttjv1)
Query: select "id", "name", "price", "description", "features", "image", "button_text", "plan_type", "is_active", "display_order", "created_at", "billing_frequency", "base_price", "installment_price", "installment_count", "per_pet_billing", "pet_discounts", "payment_description", "available_payment_methods", "available_billing_options", "annual_price", "annual_installment_price", "annual_installment_count" from "plans" where "plans"."id" = $1 -- params: ["ec994283-76de-4605-afa3-0670a8a0a475"]
üí∞ [PRICE-CALCULATION] Pre√ßo calculado no servidor: {
  planName: 'BASIC',
  basePrice: 1,
  petCount: 1,
  totalWithDiscounts: '1.00',
  correctAmountInCents: 100,
  isDiscountEligible: true
}
üîÑ [SIMPLE-PIX] Processando pagamento PIX
‚ùå [SIMPLE-PIX] Erro ao gerar PIX: ReferenceError: cieloService is not defined
    at <anonymous> (/home/runner/workspace/server/routes.ts:1509:11)
    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)
POST /api/checkout/simple-process 400 in 580ms :: {"error":"Erro ao gerar c√≥dig‚Ä¶
